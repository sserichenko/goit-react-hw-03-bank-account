{"version":3,"sources":["components/Controls/Controls.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","state","amount","handleInputChange","e","target","value","name","setState","onDeposit","props","onWithdraw","this","className","styles","controls","input","onChange","type","button","onClick","Component","Balance","balance","income","expenses","row__income","row__expenses","TransactionHistory","items","history","map","el","key","id","date","Dashboard","transactions","am","Number","toast","warn","position","POSITION","TOP_RIGHT","newOnDeposit","uuid","Date","toLocaleString","error","newWithdraw","transactionFromLocalStorage","localStorage","getItem","transactionFromLocalStorageBalance","JSON","parse","prevProps","prevState","setItem","stringify","reduce","acc","item","dashboard","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94abd0f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__2fr6j\",\"input\":\"Controls_input__1A-LO\",\"button\":\"Controls_button__1D0Fx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__3ww0p\",\"row__income\":\"Balance_row__income__1LWAL\",\"row__expenses\":\"Balance_row__expenses__1OiD8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__ssYkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__3N_XC\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nexport default class Controls extends Component {\n  static propTypes = {\n    onDeposit: PropTypes.func.isRequired,\n    onWithdraw: PropTypes.func.isRequired,\n  };\n\n  state = {\n    amount: '',\n  };\n\n  handleInputChange = e => {\n    const { value, name } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onDeposit = () => {\n    const { onDeposit } = this.props;\n    onDeposit(this.state.amount);\n    this.setState({ amount: '' });\n  };\n\n  onWithdraw = () => {\n    const { onWithdraw } = this.props;\n    onWithdraw(this.state.amount);\n    this.setState({ amount: '' });\n  };\n\n  render() {\n    const { amount } = this.state;\n    return (\n      <section className={styles.controls}>\n        <input\n          className={styles.input}\n          onChange={this.handleInputChange}\n          type=\"number\"\n          name=\"amount\"\n          value={amount}\n        />\n        <button\n          className={styles.button}\n          onClick={this.onDeposit}\n          type=\"button\"\n        >\n          Deposit\n        </button>\n        <button\n          className={styles.button}\n          onClick={this.onWithdraw}\n          type=\"button\"\n        >\n          Withdraw\n        </button>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, income, expenses }) => (\n  <section className={styles.balance}>\n    <span>\n      <span className={styles.row__income}>&#8593;</span>\n      {income}$\n    </span>\n    <span>\n      <span className={styles.row__expenses}>&#8595;</span>\n      {expenses}$\n    </span>\n    <span>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(el => (\n        <tr key={el.id}>\n          <td>{el.type}</td>\n          <td>{el.amount}</td>\n          <td>{el.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      type: PropTypes.string,\n      amount: PropTypes.number,\n      date: PropTypes.string,\n    }),\n  ).isRequired,\n};\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport uuid from 'uuid/v1';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport styles from './Dashboard.module.css';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  componentDidMount() {\n    try {\n      const transactionFromLocalStorage = localStorage.getItem('transactions');\n      const transactionFromLocalStorageBalance = localStorage.getItem(\n        'balance',\n      );\n      if (transactionFromLocalStorage && transactionFromLocalStorageBalance) {\n        this.setState({\n          transactions: JSON.parse(transactionFromLocalStorage),\n          balance: JSON.parse(transactionFromLocalStorageBalance),\n        });\n      }\n    } catch (error) {\n      toast.warn('Произошла ошибка чтения из локального хранилища !', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n    return '';\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions, balance } = this.state;\n    if (\n      prevState.transactions !== transactions &&\n      prevState.balance !== balance\n    ) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  onDeposit = am => {\n    if (Number(am) === 0 || Number(am) < 0) {\n      return toast.warn('Введите сумму для проведения операции !', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n    const newOnDeposit = {\n      id: uuid(),\n      type: 'deposit',\n      amount: Number(am),\n      date: new Date().toLocaleString(),\n    };\n    this.setState(state => ({\n      transactions: [newOnDeposit, ...state.transactions],\n      balance: Number(state.balance) + Number(am),\n    }));\n    return '';\n  };\n\n  onWithdraw = am => {\n    if (Number(am) === 0 || Number(am) < 0) {\n      return toast.warn('Введите сумму для проведения операции !', {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n    if (Number(am) > this.state.balance) {\n      return toast.error(\n        'Недостаточно средств для транзакции, пополните, пожалуйста счет !',\n        {\n          position: toast.POSITION.TOP_RIGHT,\n        },\n      );\n    }\n    const newWithdraw = {\n      id: uuid(),\n      type: 'withdraw',\n      amount: Number(am),\n      date: new Date().toLocaleString(),\n    };\n    return this.setState(state => ({\n      transactions: [newWithdraw, ...state.transactions],\n      balance: Number(state.balance) - Number(am),\n    }));\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n\n    const income = transactions.reduce(\n      (acc, item) => (item.type === 'deposit' ? acc + item.amount : acc),\n      0,\n    );\n\n    const expenses = transactions.reduce(\n      (acc, item) => (item.type === 'withdraw' ? acc + item.amount : acc),\n      0,\n    );\n\n    return (\n      <>\n        <div className={styles.dashboard}>\n          <Controls onDeposit={this.onDeposit} onWithdraw={this.onWithdraw} />\n          <Balance balance={balance} income={income} expenses={expenses} />\n          <TransactionHistory items={transactions} />\n          <ToastContainer />\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nclass App extends Component {\n  state = {};\n\n  render() {\n    return (\n      <>\n        <Dashboard />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}